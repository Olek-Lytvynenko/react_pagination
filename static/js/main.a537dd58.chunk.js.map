{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Array","Math","ceil","fill","map","item","index","slide","direction","className","classNames","href","onClick","event","currentTarget","hash","slice","length","items","from","to","numbers","n","push","getNumbers","App","useState","page","setPage","selectPerPage","setSelectPerPage","itemPerPage","id","value","onChange","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQ,IAAIC,MAAMC,KAAKC,KAAKP,EAAQC,IAAUO,KAAK,GACtDC,KAAI,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,EAAQ,KACjCC,EAAQ,SAACC,GACb,OAAQA,GACN,IAAK,QAASV,EAAaD,EAAc,GACvC,MAEF,IAAK,QAASC,EAAaD,EAAc,KAQ7C,OACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAA8B,IAAhBb,EAAqB,WAAa,IADlD,SAIE,mBACE,UAAQ,WACRY,UAAU,YACVE,KAAK,QACL,gBAAc,OACdC,QAAS,SAACC,GACRN,EAAMM,EAAMC,cAAcC,OAN9B,oBAaDhB,EAAMK,KAAI,SAACC,GAAD,OACT,oBAEEI,UAAWC,IACT,YAAcL,IAASR,EAAe,SAAW,IAHrD,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,QAAS,SAACC,GACRf,GAAee,EAAMC,cAAcC,KAAKC,MAAM,KAEhDL,KAAI,WAAMN,GANZ,SAQGA,KAbS,EAAPA,MAkBT,oBACEI,UAAWC,IACT,YAAcb,IAAgBE,EAAMkB,OAAU,WAAa,IAF/D,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVE,KAAK,QACL,gBAAc,QACdC,QAAS,SAACC,GACRN,EAAMM,EAAMC,cAAcC,OAN9B,wBCpER,IAAMG,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBpB,KAAI,SAAAkB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAAc,YAAIb,GACrBF,MAAMW,EAAOE,EAAgBA,EAAeF,EAAOE,GAEtD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EADX,8BAEMI,EAAY,GAAGf,MAAM,GAF3B,yBAGMe,EAAYA,EAAYd,OAAS,GAAGD,MAAM,GAHhD,0BAIME,EAAMD,OAJZ,OAOA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOJ,EACPK,SAAU,SAACrB,GACTiB,GAAkBjB,EAAMsB,OAAOF,OAC/BL,EAAQ,IAPZ,UAUE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOuB,EAAMD,OACbrB,QAASiC,EACThC,YAAa8B,EACb7B,aAAc,SAACe,GACbe,EAAQf,MAIZ,6BACGkB,EAAY3B,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YE5DjBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a537dd58.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (selectPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = new Array(Math.ceil(total / perPage)).fill(0)\n    .map((item, index) => item + index + 1);\n  const slide = (direction: string) => {\n    switch (direction) {\n      case '#prev': onPageChange(currentPage - 1);\n        break;\n\n      case '#next': onPageChange(currentPage + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item', (currentPage === 1) ? 'disabled' : '',\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={(event) => {\n            slide(event.currentTarget.hash);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((item) => (\n        <li\n          key={item * 5}\n          className={classNames(\n            'page-item', (item === currentPage) ? 'active' : '',\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={(event) => {\n              onPageChange(+(event.currentTarget.hash.slice(1)));\n            }}\n            href={`#${item}`}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item', (currentPage === pages.length) ? 'disabled' : '',\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={(event) => {\n            slide(event.currentTarget.hash);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [selectPerPage, setSelectPerPage] = useState(3);\n  const itemPerPage = [...items]\n    .slice(page * selectPerPage - selectPerPage, page * selectPerPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items\n          ${itemPerPage[0].slice(5)} -\n          ${itemPerPage[itemPerPage.length - 1].slice(5)} of\n          ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectPerPage}\n            onChange={(event) => {\n              setSelectPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={selectPerPage}\n        currentPage={page}\n        onPageChange={(event) => {\n          setPage(event);\n        }}\n      />\n\n      <ul>\n        {itemPerPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}