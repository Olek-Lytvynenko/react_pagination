{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Array","Math","ceil","fill","map","item","index","slide","direction","length","className","classNames","href","onClick","items","from","to","numbers","n","push","getNumbers","App","useState","page","setPage","selectPerPage","setSelectPerPage","setTotal","slice","itemPerPage","setItemPerPage","useEffect","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73227dc5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (selectPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = new Array(Math.ceil(total / perPage)).fill(0)\n    .map((item, index) => item + index + 1);\n\n  const slide = (direction: string) => {\n    switch (direction) {\n      case 'prevLink':\n        if (currentPage > 1) {\n          onPageChange(currentPage - 1);\n        }\n\n        break;\n\n      case 'nextLink':\n        if (currentPage < pages.length) {\n          onPageChange(currentPage + 1);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item', (currentPage === 1) ? 'disabled' : '',\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            slide('prevLink');\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((item) => (\n        <li\n          key={item}\n          className={classNames(\n            'page-item', (item === currentPage) ? 'active' : '',\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => {\n              onPageChange(item);\n            }}\n            href={`#${item}`}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item', (currentPage === pages.length) ? 'disabled' : '',\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === pages.length}\n          onClick={() => {\n            slide('nextLink');\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 25)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [selectPerPage, setSelectPerPage] = useState(5);\n  const [total, setTotal] = useState(items.length);\n  const [itemPerPage, setItemPerPage] = useState([...items]\n    .slice(page * selectPerPage - selectPerPage, page * selectPerPage));\n\n  const selectorChange = ((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectPerPage(+event.target.value);\n\n    setPage(1);\n  });\n\n  useEffect(() => {\n    setTotal(items.length);\n  }, []);\n\n  useEffect(() => {\n    setItemPerPage([...items]\n      .slice(page * selectPerPage - selectPerPage, page * selectPerPage));\n  }, [page, selectPerPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${+(itemPerPage[0].slice(5))} - ${+(itemPerPage[itemPerPage.length - 1].slice(5))} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectPerPage}\n            onChange={selectorChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {(total > selectPerPage)\n        && (\n          <Pagination\n            total={total}\n            perPage={selectPerPage}\n            currentPage={page}\n            onPageChange={(event) => {\n              setPage(event);\n            }}\n          />\n        )}\n\n      <ul>\n        {itemPerPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}